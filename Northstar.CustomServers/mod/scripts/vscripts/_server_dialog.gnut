global function ServerDialogInit
global function SendServerDialog
global function SendMessageServerDialog
global function AddDialogButton

struct 
{
	table< entity, array< void functionref(entity) > > playerButtonCallBack // array for each button
} file

global struct ServerDialogButtonData
{
	void functionref(entity) callback
	string text
}

global struct ServerDialogData
{
	// var menu // cut no idea how this would work
	string header = " "
	string message = " "
	// DialogMessageRuiData &ruiMessage
	// array<int> messageColor = [161, 161, 161, 255] 
	string image = "." // assets can not be sent to client without adding stuff to the launcher
	string rightImage = "." // should be asset not string but ^
	bool forceChoice = false
	bool noChoice = false
	bool noChoiceWithNavigateBack = false
	bool showSpinner = false
	bool showPCBackButton = false
	float inputDisableTime = 0
	// table<int,bool> coloredButton
	bool darkenBackground = false
	bool useFullMessageHeight = false

	array<ServerDialogButtonData> buttonData
	// array<DialogFooterData> footerData
}

void function ServerDialogInit()
{
	AddClientCommandCallback( "ns_button_dialog", ClientCommand_Button_Clicked )
	AddCallback_OnClientConnected( _addPlayerToCallbackTable )
}

void function _resetPlayerButtonCallBacks( entity player )
{
	file.playerButtonCallBack[player].clear()
}

void function _addPlayerButtonCallBack( entity player, void functionref(entity) callback )
{
	file.playerButtonCallBack[player].append( callback )
}

void function _addPlayerToCallbackTable( entity player )
{
	file.playerButtonCallBack[player] <- []
}

void function SendServerDialog( entity player, ServerDialogData dialog )
{
	array<string> args

	args.append( StringReplace( dialog.header, " ", "./s.", true, true ) )
    args.append( StringReplace( dialog.message, " ", "./s.", true, true ) )
    args.append( dialog.image )
    args.append( dialog.rightImage )
    args.append( dialog.forceChoice.tointeger().tostring() )
    args.append( dialog.noChoice.tointeger().tostring() )
    args.append( dialog.noChoiceWithNavigateBack.tointeger().tostring() )
    args.append( dialog.showSpinner.tointeger().tostring() )
    args.append( dialog.showPCBackButton.tointeger().tostring() )
    args.append( dialog.inputDisableTime.tostring() )
    args.append( dialog.darkenBackground.tointeger().tostring() )
    args.append( dialog.useFullMessageHeight.tointeger().tostring() )

	_resetPlayerButtonCallBacks( player )
	
	if ( dialog.buttonData.len() >= 1 )
	{
		args.append( StringReplace( dialog.buttonData[0].text, " ", "./s.", true, true ) )
		_addPlayerButtonCallBack( player, dialog.buttonData[0].callback )
	}
	
	if ( dialog.buttonData.len() >= 2 )
	{
		args.append( StringReplace( dialog.buttonData[1].text, " ", "./s.", true, true ) )
		_addPlayerButtonCallBack( player, dialog.buttonData[1].callback )
	}

	if ( dialog.buttonData.len() >= 3 )
	{
		args.append( StringReplace( dialog.buttonData[2].text, " ", "./s.", true, true ) )
		_addPlayerButtonCallBack( player, dialog.buttonData[2].callback )
	}

    if ( dialog.buttonData.len() >= 4 )
	{
		args.append( StringReplace( dialog.buttonData[3].text, " ", "./s.", true, true ) )
		_addPlayerButtonCallBack( player, dialog.buttonData[3].callback )
	}

	while( args.len() < 16 ) // this wouldn't add buttons but I added it so the array len stays the same
		args.append( "." )
	
	string command = "ServerRequestResquest"

	foreach( string arg in args )
	{
		command = format( "%s %s", command, arg )
	}
	
	ServerToClientStringCommand( player, command )
}

void function SendMessageServerDialog( entity player, string message )
{
	ServerDialogData dialog
	dialog.message = message
	SendServerDialog( player, dialog )
}

void function AddDialogButton( ServerDialogData dialog, string text , void functionref(entity) callback )
{
	ServerDialogButtonData button
	button.text = text
	button.callback = callback
	dialog.buttonData.append( button )
}

bool function ClientCommand_Button_Clicked( entity player, array<string> args )
{
	if ( !IsValid( player ) || args.len() != 1 || args[0].tointeger() < 0 || args[0].tointeger() > 3 )
		return true
	
	int index = args[0].tointeger()
	
	if ( !( player in file.playerButtonCallBack ) || file.playerButtonCallBack[player].len() < index + 1  )
		return true

	file.playerButtonCallBack[ player ][ index ]( player )

	return true
}