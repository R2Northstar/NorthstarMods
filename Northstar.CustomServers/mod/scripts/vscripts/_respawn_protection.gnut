global function RespawnProtection_Init

void function RespawnProtection_Init(){
	RegisterSignal( "RespawnProtectionEnd" )
	AddCallback_OnPlayerRespawned( OnPlayerRespawned )
}

void function OnPlayerRespawned( entity player )
{
	thread RespawnProtection(player,GetCurrentPlaylistVarFloat("respawnprotection",0.0))
}

void function RespawnProtection( entity player , float time ){
	OnThreadEnd(
		function() : ( player )
		{
			//cancel protect if player attack
			if( IsValid( player ) )
			{
				player.Signal( "RespawnProtectionEnd" )
				SetDefaultMPEnemyHighlight( player )
				//cancel protect if player attack
				DisableDemigod( player );
				player.ClearInvulnerable()
			}
		}
	)
	
	player.EndSignal( "OnDeath" )
	player.EndSignal( "OnDestroy" )
	player.EndSignal( "OnPrimaryAttack" )

	if( IsValid( player ) )
	{
		//start protect
		if( player.IsTitan() )
			player.SetInvulnerable()
		else
			EnableDemigod( player )
		//start a highlight
		waitthread ProtectionHighlightThink( player, time )
	}
}

void function ProtectionHighlightThink( entity player, float time )
{
	player.EndSignal( "OnDeath" )
	player.EndSignal( "OnDestroy" )
	player.EndSignal( "RespawnProtectionEnd" )

	float startTime = Time()
	while( Time() - startTime <= time )
	{
		if( IsValid( player ) )
		{
			Highlight_SetEnemyHighlight( player, "sp_enemy_pilot" )
			player.Highlight_SetParam( 2, 0, < 255,215,0 > )
		}
		WaitFrame()
	}
}
