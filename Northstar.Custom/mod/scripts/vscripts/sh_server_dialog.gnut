#if SERVER
global function ServerDialogInit
global function SendServerDialog
global function SendMessageServerDialog
global function AddDialogButton
#elseif CLIENT
global function ServerDialogueOnClientInit
#elseif UI
global function ClientCallback_RequestDialog
#endif

#if UI
float cooldown = 0.0
#endif

#if SERVER

struct 
{
    table< entity, array< void functionref( entity ) > > playerButtonCallBack // array for each button
} file

global struct ServerDialogButtonData
{
    void functionref( entity ) callback
    string text
}

global struct ServerDialogData
{
    // var menu // cut no idea how this would work
    string header = " "
    string message = " "
    // DialogMessageRuiData &ruiMessage
    // array<int> messageColor = [161, 161, 161, 255] 
    string image = "." // assets can not be sent to client without adding stuff to the launcher so using StringToAsset on UI
    string rightImage = "."
    bool forceChoice = false
    bool noChoice = false
    bool noChoiceWithNavigateBack = false
    bool showSpinner = false
    bool showPCBackButton = false
    float inputDisableTime = 0
    // table<int,bool> coloredButton
    bool darkenBackground = false
    bool useFullMessageHeight = false

    array<ServerDialogButtonData> buttonData
    // array<DialogFooterData> footerData // controller stuff?
}

void function ServerDialogInit()
{
    AddClientCommandCallback( "ns_button_dialog", ClientCommand_Button_Clicked )
    AddCallback_OnClientConnected( _AddPlayerToCallbackTable )
}

void function _ResetPlayerButtonCallBacks( entity player )
{
    file.playerButtonCallBack[player].clear()
}

void function _AddPlayerButtonCallBack( entity player, void functionref( entity ) callback )
{
    file.playerButtonCallBack[player].append( callback )
}

void function _AddPlayerToCallbackTable( entity player )
{
    file.playerButtonCallBack[player] <- []
}

void function SendServerDialog( entity player, ServerDialogData dialog )
{
    array<string> args

    args.append( StringReplace( dialog.header, " ", "./s.", true, true ) )
    args.append( StringReplace( dialog.message, " ", "./s.", true, true ) )
    args.append( dialog.image )
    args.append( dialog.rightImage )
    args.append( dialog.forceChoice.tointeger().tostring() )
    args.append( dialog.noChoice.tointeger().tostring() )
    args.append( dialog.noChoiceWithNavigateBack.tointeger().tostring() )
    args.append( dialog.showSpinner.tointeger().tostring() )
    args.append( dialog.showPCBackButton.tointeger().tostring() )
    args.append( dialog.inputDisableTime.tostring() )
    args.append( dialog.darkenBackground.tointeger().tostring() )
    args.append( dialog.useFullMessageHeight.tointeger().tostring() )

    _ResetPlayerButtonCallBacks( player )

    if ( dialog.buttonData.len() >= 1 )
    {
        args.append( StringReplace( dialog.buttonData[0].text, " ", "./s.", true, true ) )
        _AddPlayerButtonCallBack( player, dialog.buttonData[0].callback )
    }

    if ( dialog.buttonData.len() >= 2 )
    {
        args.append( StringReplace( dialog.buttonData[1].text, " ", "./s.", true, true ) )
        _AddPlayerButtonCallBack( player, dialog.buttonData[1].callback )
    }

    if ( dialog.buttonData.len() >= 3 )
    {
        args.append( StringReplace( dialog.buttonData[2].text, " ", "./s.", true, true ) )
        _AddPlayerButtonCallBack( player, dialog.buttonData[2].callback )
    }

    if ( dialog.buttonData.len() >= 4 )
    {
        args.append( StringReplace( dialog.buttonData[3].text, " ", "./s.", true, true ) )
        _AddPlayerButtonCallBack( player, dialog.buttonData[3].callback )
    }

    while( args.len() < 16 ) // this wouldn't add buttons but I added it so the array len stays the same
        args.append( "." )

    string command = "ServerRequestResquest"

    foreach( string arg in args )
    {
        command = format( "%s %s", command, arg )
    }

    ServerToClientStringCommand( player, command )
}

void function SendMessageServerDialog( entity player, string message )
{
    ServerDialogData dialog
    dialog.message = message
    SendServerDialog( player, dialog )
}

void function AddDialogButton( ServerDialogData dialog, string text, void functionref( entity ) callback )
{
    ServerDialogButtonData button
    button.text = text
    button.callback = callback
    dialog.buttonData.append( button )
}

bool function ClientCommand_Button_Clicked( entity player, array<string> args )
{
    if ( !IsValid( player ) || args.len() != 1 || args[0].tointeger() < 0 || args[0].tointeger() > 3 )
        return false

    int index = args[0].tointeger()

    if ( !( player in file.playerButtonCallBack ) || file.playerButtonCallBack[player].len() < index + 1  )
        return true

    file.playerButtonCallBack[ player ][ index ]( player )

    return true
}

#elseif CLIENT

void function ServerDialogueOnClientInit()
{
    AddServerToClientStringCommandCallback( "ServerRequestResquest", ServerCallback_DialogueRequestReceived )
}

//  string header
//  string message
//  string image
//  string rightImage
//  bool forceChoice
//  bool noChoice
//  bool noChoiceWithNavigateBack
//  bool showSpinner
//  bool showPCBackButton
//  float inputDisableTime
//  bool darkenBackground
//  bool useFullMessageHeigh

//  array<ServerDialogButtonData> buttonData
//  the long array is in this order

void function ServerCallback_DialogueRequestReceived( array<string> args )
{
    if ( args.len() != 16 )
        return
    
    string header = StringReplace( args[0], "./s.", " ", true, true )
    string message = StringReplace( args[1], "./s.", " ", true, true )
    string image = args[2]
    string rightImage = args[3]
    bool forceChoice = args[4].tointeger() == 1
    bool noChoice = args[5].tointeger()  == 1
    bool noChoiceWithNavigateBack = args[6].tointeger() == 1
    bool showSpinner = args[7].tointeger() == 1
    bool showPCBackButton = args[8].tointeger() == 1
    float inputDisableTime = args[9].tofloat()
    bool darkenBackground = args[10].tointeger() == 1
    bool useFullMessageHeight = args[11].tointeger() == 1

    string button0Text = StringReplace( args[12], "./s.", " ", true, true )
    string button1Text = StringReplace( args[13], "./s.", " ", true, true )
    string button2Text = StringReplace( args[14], "./s.", " ", true, true )
    string button3Text = StringReplace( args[15], "./s.", " ", true, true )

    RunUIScript( 
        "ClientCallback_RequestDialog",
        header,
        message,
        image,
        rightImage,
        forceChoice,
        noChoice,
        noChoiceWithNavigateBack,
        showSpinner,
        showPCBackButton,
        inputDisableTime,
        darkenBackground,
        useFullMessageHeight,
        button0Text,
        button1Text,
        button2Text,
        button3Text
    )
}

#elseif UI

void function ClientCallback_RequestDialog( string header, string message, string image, string rightImage, bool forceChoice, bool noChoice, bool noChoiceWithNavigateBack, bool showSpinner, bool showPCBackButton, float inputDisableTime, bool darkenBackground, bool useFullMessageHeight, string button0Text, string button1Text, string button2Text, string button3Text )
{   
    if ( uiGlobal.activeMenu != null )
        return
    
    if ( cooldown >= Time() )
        return
    cooldown = Time() + 1

    DialogData dialogData

    dialogData.header = header
    dialogData.message = message
    
    if ( image.find("/") != null )
        dialogData.image = StringToAsset( image )
    if ( rightImage.find("/") != null )
        dialogData.rightImage = StringToAsset( rightImage )

    dialogData.forceChoice = forceChoice
    dialogData.noChoice = noChoice
    dialogData.noChoiceWithNavigateBack = noChoiceWithNavigateBack
    dialogData.showSpinner = showSpinner
    dialogData.showPCBackButton = showPCBackButton
    dialogData.inputDisableTime = inputDisableTime
    dialogData.darkenBackground = darkenBackground
    dialogData.useFullMessageHeight = useFullMessageHeight

    if ( button0Text != "." )
        AddDialogButton( dialogData, button0Text, button0CallBack ) // max is 4 buttons
    if ( button1Text != "." )
        AddDialogButton( dialogData, button1Text, button1CallBack )
    if ( button2Text != "." )
        AddDialogButton( dialogData, button2Text, button2CallBack )
    if ( button3Text != "." )
        AddDialogButton( dialogData, button3Text, button3CallBack )

    OpenDialog( dialogData )
}

void function button0CallBack()
{
    ClientCommand( "ns_button_dialog 0" )
}

void function button1CallBack()
{
    ClientCommand( "ns_button_dialog 1" )
}

void function button2CallBack()
{
    ClientCommand( "ns_button_dialog 2" )
}

void function button3CallBack()
{
    ClientCommand( "ns_button_dialog 3" )
}

#endif