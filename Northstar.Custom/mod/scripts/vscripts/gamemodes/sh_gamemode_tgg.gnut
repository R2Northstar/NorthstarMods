global function Sh_GamemodeTGG_Init
global function GetTitanGunGameWeapons

global const string GAMEMODE_TGG = "tgg"

global struct TitanGunGameWeapon
{
	string weapon
    string core
	array<string> primaryMods
    string offhand
    array<string> offhandMods
    string secondary
    array<string> secondaryMods
}

struct {
	array<TitanGunGameWeapon> weapons
} file

void function Sh_GamemodeTGG_Init()
{
	AddCallback_OnCustomGamemodesInit( CreateGamemodeTGG )
    AddCallback_OnRegisteringCustomNetworkVars( TGGRegisterNetworkVars )
	Sh_GGEarnMeter_Init( GAMEMODE_TGG )
}

void function CreateGamemodeTGG()
{
	GameMode_Create( GAMEMODE_TGG )
	GameMode_SetName( GAMEMODE_TGG, "#GAMEMODE_TGG" )
	GameMode_SetDesc( GAMEMODE_TGG, "#PL_tgg_desc" )
	GameMode_SetGameModeAnnouncement( GAMEMODE_TGG, "ffa_modeDesc" )
	GameMode_SetDefaultTimeLimits( GAMEMODE_TGG, 10, 0.0 )
	GameMode_AddScoreboardColumnData( GAMEMODE_TGG, "#SCOREBOARD_TITAN_KILLS", PGS_TITAN_KILLS, 2 )
	GameMode_AddScoreboardColumnData( GAMEMODE_TGG, "#SCOREBOARD_TITAN_DAMAGE", PGS_ASSAULT_SCORE, 6 )
	GameMode_SetColor( GAMEMODE_TGG, [147, 204, 57, 255] )

	AddPrivateMatchModeSettingArbitrary( "#GAMEMODE_tgg", "tgg_kill_reward", "1.0" )
	AddPrivateMatchModeSettingArbitrary( "#GAMEMODE_tgg", "tgg_assist_reward", "0.5" )

	AddPrivateMatchMode( GAMEMODE_TGG )

    // xo16
    TitanGunGameWeapon tggXO16 = { weapon = "mp_titanweapon_xo16_vanguard", secondary = "mp_titanweapon_stun_laser", ...}
    file.weapons.append(tggXO16)

    // predator cannon
    TitanGunGameWeapon tggPredCannon = { weapon = "mp_titanweapon_predator_cannon", secondary = "mp_titanability_gun_shield", ...}
    file.weapons.append(tggPredCannon)
    
    // plasma railgun
    TitanGunGameWeapon tggRailgun = { weapon = "mp_titanweapon_sniper", secondary = "mp_titanability_tether_trap",  ...}
    file.weapons.append(tggRailgun)

    // leadwall
    TitanGunGameWeapon tggLeadwall = { weapon = "mp_titanweapon_leadwall", secondary = "mp_titanability_basic_block", ...}
    file.weapons.append(tggLeadwall)

    // particle accelerator
    TitanGunGameWeapon tggParticleAccel = { weapon = "mp_titanweapon_particle_accelerator", secondary = "mp_titanability_laser_trip",  ...}
    file.weapons.append(tggParticleAccel)

    // meteor
    TitanGunGameWeapon tggMeteor = { weapon = "mp_titanweapon_meteor", secondary = "mp_titanweapon_heat_shield", ...}
    file.weapons.append(tggMeteor)

    // 40mm
    TitanGunGameWeapon tgg40mm = { weapon = "mp_titanweapon_sticky_40mm", secondary = "mp_titanability_particle_wall", ...}
    file.weapons.append(tgg40mm)

    // quad rocket
    TitanGunGameWeapon tggRocketeer = { weapon = "mp_titanweapon_rocketeer_rocketstream", secondary = "mp_titanability_rocketeer_ammo_swap", ...}
    file.weapons.append(tggRocketeer)

    // sword core
    TitanGunGameWeapon tggMelee = { weapon = "melee_titan_sword", ...}
    file.weapons.append(tggMelee)

    // pilot
    TitanGunGameWeapon tggMGL = { weapon = "mp_weapon_mgl", offhand = "mp_weapon_grenade_sonar", offhandMods = ["amped_tacticals"], primaryMods = ["at_unlimited_ammo"] ...}
    file.weapons.append(tggMGL)

	GameMode_SetDefaultScoreLimits( GAMEMODE_TGG, 20, 0)

	#if SERVER
		GameMode_AddServerInit( GAMEMODE_TGG, GamemodeTGG_Init )
		GameMode_AddServerInit( GAMEMODE_TGG, GamemodeFFAShared_Init )
		GameMode_SetPilotSpawnpointsRatingFunc( GAMEMODE_TGG, RateSpawnpoints_Generic )
		GameMode_SetTitanSpawnpointsRatingFunc( GAMEMODE_TGG, RateSpawnpoints_Generic )
	#elseif CLIENT
		GameMode_AddClientInit( GAMEMODE_TGG, ClGamemodeTGG_Init )
		GameMode_AddClientInit( GAMEMODE_TGG, GamemodeFFAShared_Init )
		GameMode_AddClientInit( GAMEMODE_TGG, ClGamemodeTGG_Init )
	#endif
	#if !UI
		GameMode_SetScoreCompareFunc( GAMEMODE_TGG, CompareAssaultScore )
		GameMode_AddSharedInit( GAMEMODE_TGG, GamemodeFFA_Dialogue_Init )
	#endif
}

void function TGGRegisterNetworkVars()
{
    if ( GAMETYPE != GAMEMODE_TGG )
		return

    Remote_RegisterFunction( "ServerCallback_TGG_PlayUpgradeFX" )
}

array<TitanGunGameWeapon> function GetTitanGunGameWeapons()
{
	return file.weapons
}