untyped
global function GamemodeTGG_Init

const float TGGIntroLength = 15.0

void function GamemodeTGG_Init()
{
    SetSpawnpointGamemodeOverride( FFA )
	//Riff_ForceSetSpawnAsTitan( eSpawnAsTitan.Always )
	Riff_ForceTitanExitEnabled( eTitanExitEnabled.Never )
	TrackTitanDamageInPlayerGameStat( PGS_ASSAULT_SCORE )
	ScoreEvent_SetupEarnMeterValuesForMixedModes()
	SetLoadoutGracePeriodEnabled( false )
	SetRespawnsEnabled( false )
	Riff_ForceTitanAvailability( eTitanAvailability.Never )
	Riff_ForceBoostAvailability( eBoostAvailability.Disabled )

	ClassicMP_SetCustomIntro( TGGIntroSetup, TGGIntroLength )
    AddCallback_OnClientConnected( OnPlayerConnected ) // fuck
	AddCallback_OnPlayerKilled( AddTeamScoreForPlayerKilled ) // dont have to track autotitan kills since you cant leave your titan in this mode
	AddCallback_OnPilotBecomesTitan( OnPlayerBecomesTitan ) // I have no idea why this wasn't working with normal respawn callback, might be now though
    AddCallback_GGEarnMeterFull( OnTGGEarnMeterFilled )

    SetKillcamsEnabled( false )
}

void function TGGIntroSetup()
{
	// this should show intermission cam for 15 sec in prematch, before spawning players as titans
	AddCallback_GameStateEnter( eGameState.Prematch, TGGIntroStart )
	AddCallback_OnClientConnected( TGGIntroShowIntermissionCam )
}

void function TGGIntroStart()
{
	thread TGGIntroStartThreaded()
}

void function TGGIntroStartThreaded()
{
	ClassicMP_OnIntroStarted()

	foreach ( entity player in GetPlayerArray() )
		TGGIntroShowIntermissionCam( player )
		
	wait TGGIntroLength
	
	ClassicMP_OnIntroFinished()
}

void function TGGIntroShowIntermissionCam( entity player )
{
	if ( GetGameState() != eGameState.Prematch )
		return
	
	thread PlayerWatchesTGGIntroIntermissionCam( player )
}

void function PlayerWatchesTGGIntroIntermissionCam( entity player )
{
	ScreenFadeFromBlack( player )

	entity intermissionCam = GetEntArrayByClass_Expensive( "info_intermission" )[ 0 ]
	
	// the angle set here seems sorta inconsistent as to whether it actually works or just stays at 0 for some reason
	player.SetObserverModeStaticPosition( intermissionCam.GetOrigin() )
	player.SetObserverModeStaticAngles( intermissionCam.GetAngles() )
	player.StartObserverMode( OBS_MODE_STATIC_LOCKED )

	wait TGGIntroLength
	RespawnAsTitan( player, false , CreateTGGTitanLoadout( player) )

    TryGameModeAnnouncement( player )
}

void function OnPlayerBecomesTitan( entity player, entity titan )
{
    Sv_GGEarnMeter_SetWeaponIcon( player, GetTitanGunGameWeapon( player ).weapon )
    foreach ( entity weapon in player.GetOffhandWeapons() )
		player.TakeWeaponNow( weapon.GetWeaponClassName() )

    thread OnPlayerRespawned_Threaded( player )
}

void function OnPlayerConnected( entity player )
{
    if( GetGameState() == eGameState.Playing )
        thread RespawnAsTitan( player, false , CreateTGGTitanLoadout( player ))
}

void function OnPlayerRespawned_Threaded( entity player )
{
	WaitFrame()
    if ( IsValid( player ) )
		PlayerEarnMeter_SetMode( player, eEarnMeterMode.DISABLED )
    // ultra fucking hacky jesus
    int currentWeaponIndex = GameRules_GetTeamScore( player.GetTeam() )
    if(currentWeaponIndex == 8)
    {
        WaitFrame()
        player.Server_SetDodgePower( 100.0 )
		player.SetPowerRegenRateScale( 6.5 )
        player.GiveOffhandWeapon("melee_titan_sword", OFFHAND_MELEE, ["super_charged"] )
        player.SetActiveWeaponByName("melee_titan_sword")
        GivePassive( player, ePassives.PAS_FUSION_CORE )
		GivePassive( player, ePassives.PAS_SHIFT_CORE )
    }
}

bool function OnTGGEarnMeterFilled( entity player )
{
	AddTeamScore( player.GetTeam(), 1 )
	player.AddToPlayerGameStat( PGS_TITAN_KILLS, 1 )
	UpdateLivingTitanLoadout( player )

	int currentScore = GameRules_GetTeamScore( player.GetTeam() )
	int maxScore = GetGunGameWeapons().len()

	return currentScore >= maxScore
}

void function Reward( entity player, entity victim, string scoreEvent, float percentageReward )
{
	percentageReward = clamp(percentageReward, 0.0, 1.0)
	Sv_GGEarnMeter_AddPercentage( player, percentageReward )
	Remote_CallFunction_NonReplay( player, "ServerCallback_ScoreEvent", GetScoreEvent(scoreEvent).eventId, 0, eEventDisplayType.MEDAL, victim.GetEncodedEHandle(), 0.0, percentageReward)
}

void function UpdateLivingTitanLoadout( entity player )
{
    if( GetGameState() == eGameState.WinnerDetermined)
        return

    int currentWeaponIndex = GameRules_GetTeamScore( player.GetTeam() )
	array<TitanGunGameWeapon> weapons = GetTitanGunGameWeapons()
	
	if ( currentWeaponIndex >= weapons.len() )
		currentWeaponIndex = weapons.len() - 1
		
	if ( currentWeaponIndex > 9) // play end of game music for special weapons
		PlayMusicToAll( eMusicPieceID.LEVEL_LAST_MINUTE ) // this *shouldn't* overlap if done multiple times
	
	TitanGunGameWeapon weapon = weapons[ currentWeaponIndex ]
	Sv_GGEarnMeter_SetWeaponIcon( player, weapon.weapon )
    if ( currentWeaponIndex > 9 )
        return

    if( currentWeaponIndex == 9 )
    {
        EmitSoundOnEntity( player, "autoEjectNotice" ) // should be changed when autoeject VA gets fixed (apply the passive to the player ideally just b4 eject)
        thread TitanEjectPlayer( player, true )
        return
    }

    // discount upgrade core heal fx
    EmitSoundOnEntityExceptToPlayer( player, player, "Titan_Monarch_Smart_Core_Activated_3P" )
	EmitSoundOnEntityOnlyToPlayer( player, player, "Titan_Monarch_Smart_Core_Activated_1P" )
	entity soul = player.GetTitanSoul()
	soul.SetShieldHealth( player.GetShieldHealthMax() )

	foreach ( entity weapon in player.GetMainWeapons() )
		player.TakeWeaponNow( weapon.GetWeaponClassName() )

    if( currentWeaponIndex == 8 )
    {
        player.GiveWeapon( "mp_titanweapon_sniper" )
        player.Server_SetDodgePower( 100.0 )
		player.SetPowerRegenRateScale( 6.5 )
        player.GiveOffhandWeapon("melee_titan_sword", OFFHAND_MELEE, ["super_charged"] )
        player.SetActiveWeaponByName("melee_titan_sword")
        GivePassive( player, ePassives.PAS_FUSION_CORE )
		GivePassive( player, ePassives.PAS_SHIFT_CORE )
    } else {
        player.GiveWeapon( weapon.weapon, weapon.mods )
    }
}

void function AddTeamScoreForPlayerKilled( entity victim, entity attacker, var damageInfo )
{
	if ( victim != attacker && GetGameState() == eGameState.Playing)
	{
        if ((victim.IsTitan() && attacker.IsPlayer()) || (attacker.IsPlayer() && victim.IsPlayer()))
        {
            float percentageReward = GetCurrentPlaylistVarFloat( "tgg_kill_reward", 1.0 )
			string scoreEvent = "KillTitan"

		    AddTeamScore( attacker.GetTeam(), 1 )
		    attacker.AddToPlayerGameStat( PGS_ASSAULT_SCORE, 1 )

            UpdateLivingTitanLoadout( attacker )
        }
	}

    table<int, bool> alreadyAssisted
	foreach( DamageHistoryStruct attackerInfo in victim.e.recentDamageHistory )
	{
		if( attackerInfo.attacker != attacker && !alreadyAssisted[attackerInfo.attacker.GetEncodedEHandle()] )
		{
			if ( attackerInfo.damageSourceId != eDamageSourceId.melee_pilot_emptyhanded ) {
				alreadyAssisted[attackerInfo.attacker.GetEncodedEHandle()] <- true
				Reward( attackerInfo.attacker, victim, "TitanAssist", GetCurrentPlaylistVarFloat( "tgg_assist_reward", 0.34 ) )
			}
		}
	}

    thread ForcedRespawnPlayerWithTitanLoadout( victim )
}

void function ForcedRespawnPlayerWithTitanLoadout( entity player )
{
    wait 4
    int currentWeaponIndex = GameRules_GetTeamScore( player.GetTeam() )
    if(!IsAlive( player ) || (GetGameState() != eGameState.WinnerDetermined))
    {
        if (currentWeaponIndex >= 9)
            player.RespawnPlayer( null )
        else
            thread RespawnAsTitan( player, false , CreateTGGTitanLoadout( player ) )
    }
}

TitanLoadoutDef function CreateTGGTitanLoadout( entity player )
{
    array<string> possibleChassis = ["titan_atlas_tone_prime", "titan_atlas_tracker", "titan_atlas_ion_prime", "titan_atlas_stickybomb", "titan_atlas_vanguard"]
    TitanGunGameWeapon weapon = GetTitanGunGameWeapon( player )
    TitanLoadoutDef loadout = GetTitanLoadoutForPlayer( player )
    loadout.titanClass = "ion" // no ronin prime crash
    loadout.setFile = possibleChassis.getrandom()
    loadout.special = "" // these empty strings dont even fucking arghh
    loadout.antirodeo = ""
    loadout.passive1 = ""
    loadout.passive2 = "" 
    if(weapon.weapon == "melee_titan_sword")
    {
        loadout.primary = "mp_titanweapon_sniper"
    } else 
    {
        loadout.primary = weapon.weapon
    }
    loadout.coreAbility = weapon.core
    printt("--TGG LOADOUT--")
    PrintTitanLoadout( loadout )
    return loadout
}

TitanGunGameWeapon function GetTitanGunGameWeapon( entity player )
{
    int currentWeaponIndex = GameRules_GetTeamScore( player.GetTeam() )
    array<TitanGunGameWeapon> weapons = GetTitanGunGameWeapons()

    if ( currentWeaponIndex >= weapons.len() )
		currentWeaponIndex = weapons.len() - 1 // can someone explain what this does
		
	if ( currentWeaponIndex > 8 ) // play end of game music for special weapons
		PlayMusicToAll( eMusicPieceID.LEVEL_LAST_MINUTE )

    TitanGunGameWeapon weapon = weapons[ currentWeaponIndex ]

    return weapon
}