untyped
global function GamemodeTGG_Init

const int TGG_LEGION_SCORE = 1
const int TGG_SWORDCORE_SCORE = 8
const int TGG_EJECT_SCORE = 9
const float TGGIntroLength = 15.0

void function GamemodeTGG_Init()
{
    SetSpawnpointGamemodeOverride( FFA )
	//Riff_ForceSetSpawnAsTitan( eSpawnAsTitan.Always )
	Riff_ForceTitanExitEnabled( eTitanExitEnabled.Never )
	TrackTitanDamageInPlayerGameStat( PGS_ASSAULT_SCORE )
	ScoreEvent_SetupEarnMeterValuesForMixedModes()
	SetLoadoutGracePeriodEnabled( false )
	SetRespawnsEnabled( false )
	Riff_ForceTitanAvailability( eTitanAvailability.Never )
	Riff_ForceBoostAvailability( eBoostAvailability.Disabled )

	ClassicMP_SetCustomIntro( TGGIntroSetup, TGGIntroLength )
    AddCallback_OnClientConnected( OnPlayerConnected ) // fuck
	AddCallback_OnPlayerKilled( AddTeamScoreForPlayerKilled ) // dont have to track autotitan kills since you cant leave your titan in this mode
	AddCallback_OnPilotBecomesTitan( OnPlayerBecomesTitan ) // I have no idea why this wasn't working with normal respawn callback, might be now though
    AddCallback_GGEarnMeterFull( OnTGGEarnMeterFilled )
    AddPostDamageCallback( "player", AddTGGCorePercentage )
    SetKillcamsEnabled( false )
}

void function TGGIntroSetup()
{
	// this should show intermission cam for 15 sec in prematch, before spawning players as titans
	AddCallback_GameStateEnter( eGameState.Prematch, TGGIntroStart )
	AddCallback_OnClientConnected( TGGIntroShowIntermissionCam )
}

void function TGGIntroStart()
{
	thread TGGIntroStartThreaded()
}

void function TGGIntroStartThreaded()
{
	ClassicMP_OnIntroStarted()

	foreach ( entity player in GetPlayerArray() )
		TGGIntroShowIntermissionCam( player )
		
	wait TGGIntroLength
	
	ClassicMP_OnIntroFinished()
}

void function TGGIntroShowIntermissionCam( entity player )
{
	if ( GetGameState() != eGameState.Prematch )
		return
	
	thread PlayerWatchesTGGIntroIntermissionCam( player )
}

void function PlayerWatchesTGGIntroIntermissionCam( entity player )
{
	ScreenFadeFromBlack( player )

	entity intermissionCam = GetEntArrayByClass_Expensive( "info_intermission" )[ 0 ]
	
	// the angle set here seems sorta inconsistent as to whether it actually works or just stays at 0 for some reason
	player.SetObserverModeStaticPosition( intermissionCam.GetOrigin() )
	player.SetObserverModeStaticAngles( intermissionCam.GetAngles() )
	player.StartObserverMode( OBS_MODE_STATIC_LOCKED )

	wait TGGIntroLength
	RespawnAsTitan( player, false , CreateTGGTitanLoadout( player) )

    TryGameModeAnnouncement( player )
}

void function OnPlayerBecomesTitan( entity player, entity titan )
{
    // foreach ( entity weapon in player.GetOffhandWeapons() )
	// 	player.TakeWeaponNow( weapon.GetWeaponClassName() )

    // TitanGunGameWeapon ggWeapon = GetTitanGunGameWeapon( player )
    // if( ggWeapon.weapon != "melee_titan_sword" )
    //     player.GiveOffhandWeapon( ggWeapon.secondary, OFFHAND_LEFT )

    thread OnPlayerRespawned_Threaded( player )
}

void function AddTGGCorePercentage( entity victim, var damageInfo )
{
    if( !victim.IsTitan() )
        return

    float damage = DamageInfo_GetDamage( damageInfo )
    float playlistVar = GetCurrentPlaylistVarFloat( "tgg_titandamage_reward", 0.0001 )
    float percentageReward = damage * playlistVar
    string scoreEvent = "DamageTitan"

    entity attacker = DamageInfo_GetAttacker( damageInfo )

    if( attacker.IsTitan() )
        SoulTitanCore_SetNextAvailableTime( attacker.GetTitanSoul(), 0.0 ) // ~~try to avoid to titan cores as it crashes~~. this may not be an issue anymore but I don't particularly want cores anyway

    Reward( attacker, victim, scoreEvent, percentageReward)
}

void function OnPlayerConnected( entity player )
{
    if( GetGameState() == eGameState.Playing )
        thread RespawnAsTitan( player, false , CreateTGGTitanLoadout( player ))
}

void function OnPlayerRespawned_Threaded( entity player )
{
	WaitFrame()
    if ( IsValid( player ) )
		PlayerEarnMeter_SetMode( player, eEarnMeterMode.DISABLED )
    // ultra fucking hacky jesus
    int currentWeaponIndex = GameRules_GetTeamScore( player.GetTeam() )
    if(currentWeaponIndex == 8)
    {
        WaitFrame()
        player.Server_SetDodgePower( 100.0 )
		player.SetPowerRegenRateScale( 6.5 )
        //player.GiveOffhandWeapon("melee_titan_sword", OFFHAND_MELEE, ["super_charged"] )
        player.SetActiveWeaponByName("melee_titan_sword")
        GivePassive( player, ePassives.PAS_FUSION_CORE )
		GivePassive( player, ePassives.PAS_SHIFT_CORE )
    }
}

bool function OnTGGEarnMeterFilled( entity player )
{
	AddTeamScore( player.GetTeam(), 1 )
	//player.AddToPlayerGameStat( PGS_TITAN_KILLS, 1 )

    // discount upgrade core heal fx
    EmitSoundOnEntityExceptToPlayer( player, player, "Titan_Monarch_Smart_Core_Activated_3P" )
	EmitSoundOnEntityOnlyToPlayer( player, player, "Titan_Monarch_Smart_Core_Activated_1P" )
    Remote_CallFunction_Replay( player, "ServerCallback_TGG_PlayUpgradeFX" )
	entity soul = player.GetTitanSoul()
	soul.SetShieldHealth( soul.GetShieldHealthMax() )

	int currentScore = GameRules_GetTeamScore( player.GetTeam() )
	int maxScore = GetGunGameWeapons().len()

    if( currentScore == TGG_EJECT_SCORE ) {
        EmitSoundOnEntityOnlyToPlayer( player, player, "autoEjectNotice" ) // should be changed when autoeject VA gets fixed (apply the passive to the player ideally just b4 eject)
        var eject = TitanEjectPlayer( player, true ) // doesn't seem to like playing the eject anims, just make it instant
        OnThreadEnd(
            function() : ( player )
            {
                TitanGunGameLoadoutInfo ggWeapon = GetTGGLoadoutInformation( player )

                foreach ( entity weapon in player.GetMainWeapons() )
		            player.TakeWeaponNow( weapon.GetWeaponClassName() )

	            foreach ( entity weapon in player.GetOffhandWeapons() )
		            player.TakeWeaponNow( weapon.GetWeaponClassName() )

                player.GiveOffhandWeapon( ggWeapon.pilotOffhand , OFFHAND_LEFT, ggWeapon.pilotOffhandMods)
                player.GiveWeapon( ggWeapon.pilotWeapon, ggWeapon.pilotWeaponMods)
                if ( IsValid( player ) )
		            thread OnTGGEjectThreaded( player )
                
                return false
            }
        )
    } else if( currentScore == TGG_SWORDCORE_SCORE )
    {
        player.Server_SetDodgePower( 100.0 )
		player.SetPowerRegenRateScale( 6.5 )
        //player.GiveOffhandWeapon("melee_titan_sword", OFFHAND_MELEE, ["super_charged"] )
        player.SetActiveWeaponByName("melee_titan_sword")
        GivePassive( player, ePassives.PAS_FUSION_CORE )
		GivePassive( player, ePassives.PAS_SHIFT_CORE )
    }

    // FUCK YOU POWERSHOT SCRIPTS CUNT
    if( currentScore == TGG_LEGION_SCORE )
        player.SetModel( $"models/titans/heavy/titan_heavy_deadbolt.mdl" )
    else if(currentScore == TGG_LEGION_SCORE + 1)
        player.SetModel( $"models/titans/medium/titan_medium_ajax.mdl")

	TakeAllWeapons( player )
	TakeAllPassives( player )
	soul.passives = arrayofsize( GetNumPassives(), false ) //Clear out passives on soul

    GiveTitanLoadout( player, CreateTGGTitanLoadout( player ) )
	return currentScore >= maxScore
}

void function Reward( entity player, entity victim, string scoreEvent, float percentageReward )
{
	percentageReward = clamp(percentageReward, 0.0, 1.0)
	Sv_GGEarnMeter_AddPercentage( player, percentageReward )
	Remote_CallFunction_NonReplay( player, "ServerCallback_ScoreEvent", GetScoreEvent(scoreEvent).eventId, 0, eEventDisplayType.MEDAL, victim.GetEncodedEHandle(), 0.0, percentageReward)
}

void function UpdateLivingTitanLoadout( entity player )
{
    // if( GetGameState() == eGameState.WinnerDetermined)
    //     return

    // int currentWeaponIndex = GameRules_GetTeamScore( player.GetTeam() )
	// array<TitanGunGameWeapon> ggWeapons = GetTitanGunGameWeapons()
	
	// if ( currentWeaponIndex >= ggWeapons.len() )
	// 	currentWeaponIndex = ggWeapons.len() - 1
		
	
	// TitanGunGameWeapon ggWeapon = ggWeapons[ currentWeaponIndex ]
    // if ( currentWeaponIndex > 9 )
    //     return

    // if( currentWeaponIndex == 9 )
    // {

    // }

	// foreach ( entity weapon in player.GetMainWeapons() )
	// 	player.TakeWeaponNow( weapon.GetWeaponClassName() )
    // foreach ( entity weapon in player.GetOffhandWeapons() )
	// 	player.TakeWeaponNow( weapon.GetWeaponClassName() )

    // if( ggWeapon.weapon == "melee_titan_sword" )
    // {
    //     player.GiveWeapon( "mp_titanweapon_sniper" )
    //     player.Server_SetDodgePower( 100.0 )
	// 	player.SetPowerRegenRateScale( 6.5 )
    //     player.GiveOffhandWeapon("melee_titan_sword", OFFHAND_MELEE, ["super_charged"] )
    //     player.SetActiveWeaponByName("melee_titan_sword")
    //     GivePassive( player, ePassives.PAS_FUSION_CORE )
	// 	GivePassive( player, ePassives.PAS_SHIFT_CORE )
    // } else {
    //     player.GiveWeapon( ggWeapon.weapon )
    //     player.GiveOffhandWeapon( ggWeapon.secondary, OFFHAND_LEFT )
    // }

    // string nextWeapon = GetCurrentEarnMeterIcon( player ).weapon
    // if( nextWeapon == "melee_titan_sword" )
    //     ServerCallback_GGEarnMeter_SetWeaponIcon( player, "mp_titancore_shift_core" )
    // else
    //     ServerCallback_GGEarnMeter_SetWeaponIcon( player, nextWeapon )
}

void function OnTGGEjectThreaded( entity player )
{
    WaitFrame()
    PlayerEarnMeter_SetMode( player, eEarnMeterMode.DISABLED )
}

void function AddTeamScoreForPlayerKilled( entity victim, entity attacker, var damageInfo )
{
	if ( victim != attacker && GetGameState() == eGameState.Playing)
	{
        if ( (victim.IsTitan() && attacker.IsPlayer()) || (attacker.IsPlayer() && victim.IsPlayer()) )
        {
            float percentageReward = GetCurrentPlaylistVarFloat( "tgg_kill_reward", 0.30 )
			string scoreEvent = "KillTitan"

            Reward( attacker, victim, scoreEvent, percentageReward)
            if( IsValid(attacker.GetTitanSoul()) )
                SoulTitanCore_SetNextAvailableTime( attacker.GetTitanSoul(), 0.0 ) // ~~try to avoid to titan cores as it crashes~~. this may not be an issue anymore but I don't particularly want cores anyway
        }


        table<int, bool> alreadyAssisted
	    foreach( DamageHistoryStruct attackerInfo in victim.GetTitanSoul().e.recentDamageHistory )
	    {   
		    bool exists = attackerInfo.attacker.GetEncodedEHandle() in alreadyAssisted ? true : false
		    if( attackerInfo.attacker != attacker && attackerInfo.attacker != victim && !exists )
		    {
			    alreadyAssisted[attackerInfo.attacker.GetEncodedEHandle()] <- true
                Reward( attackerInfo.attacker, victim, "TitanAssist", GetCurrentPlaylistVarFloat( "tgg_assist_reward", 0.15 ) )
		    }
	    }
	}

    thread HackyForcedRespawn( victim )
}

void function HackyForcedRespawn( entity player )
{
    wait 4 // literally just imitating normal respawn times :terror:

    if( GetGameState() == eGameState.WinnerDetermined)
        return
        
    int currentWeaponIndex = GameRules_GetTeamScore( player.GetTeam() )
    if( !IsAlive( player ) && GetGameState() != eGameState.WinnerDetermined )
    {
        if (currentWeaponIndex >= 9)
            RespawnTGGPilot( player )
        else
            thread RespawnAsTitan( player, false, CreateTGGTitanLoadout( player ) )
    }
}

void function RespawnTGGPilot( entity player )
{
    player.RespawnPlayer( null )
    foreach ( entity weapon in player.GetMainWeapons() )
		player.TakeWeaponNow( weapon.GetWeaponClassName() )

	foreach ( entity weapon in player.GetOffhandWeapons() )
		player.TakeWeaponNow( weapon.GetWeaponClassName() )

    TitanGunGameLoadoutInfo tggLoadoutInfo = GetTGGLoadoutInformation( player )

    player.GiveOffhandWeapon( tggLoadoutInfo.pilotOffhand , OFFHAND_LEFT, tggLoadoutInfo.pilotOffhandMods )
    player.GiveWeapon( tggLoadoutInfo.pilotWeapon, tggLoadoutInfo.pilotWeaponMods )
}

TitanLoadoutDef function CreateTGGTitanLoadout( entity player )
{
    int skin = GetTitanLoadoutForPlayer( player ).skinIndex
    int camo = GetTitanLoadoutForPlayer( player ).camoIndex
    bool shouldUseSkinIndex = skin > 0

    entity soul = player.GetTitanSoul()

    array<string> possibleChassis = ["titan_atlas_tone_prime", "titan_atlas_tracker", "titan_atlas_ion_prime", "titan_atlas_stickybomb", "titan_atlas_vanguard"]
    TitanGunGameLoadoutInfo tggLoadoutInfo = GetTGGLoadoutInformation( player )
    TitanLoadoutDef loadout = GetDefaultTitanLoadout( tggLoadoutInfo.index )
    // loadout.titanClass = "ion" // i don't actually know if this bug still roams around but i don't want pain

    if( IsValid(soul) )
        loadout.setFile = soul.soul.titanLoadout.setFile
    else
        loadout.setFile = possibleChassis.getrandom()

    loadout.passive1 = "pas_mobility_dash_capacity" // default loadouts stink
    loadout.melee = ""
    if( shouldUseSkinIndex )
        loadout.skinIndex = skin
    else
        loadout.camoIndex = camo

    if( tggLoadoutInfo.isSwordCore || tggLoadoutInfo.isBrute )
        loadout = GetTGGSpecialLoadout( player, loadout )

    return loadout
}

TitanLoadoutDef function GetTGGSpecialLoadout( entity player, TitanLoadoutDef loadout )
{
    TitanGunGameLoadoutInfo tggLoadoutInfo = GetTGGLoadoutInformation( player )

    if( tggLoadoutInfo.isBrute )
    {
        loadout.special = tggLoadoutInfo.bruteDefensive // these empty strings dont even fucking arghh
        loadout.antirodeo = tggLoadoutInfo.bruteUtility
        loadout.passive2 = ""
        loadout.ordnance = tggLoadoutInfo.bruteOffensive
        loadout.primary = tggLoadoutInfo.bruteWeapon
    } else if( tggLoadoutInfo.isSwordCore )
    {
        loadout.special = ""
        loadout.antirodeo = ""
        loadout.passive2 = ""
        loadout.ordnance = ""
        loadout.primary = tggLoadoutInfo.bruteWeapon
        loadout.melee = tggLoadoutInfo.swordCoreWeapon
    }

    return loadout
}

TitanGunGameLoadoutInfo function GetTGGLoadoutInformation( entity player )
{
    int currentIndex = GameRules_GetTeamScore( player.GetTeam() )
    array<TitanGunGameLoadoutInfo> loadoutInfos = GetTitanGunGameWeapons()

    if( currentIndex >= loadoutInfos.len() )
		currentIndex = loadoutInfos.len() - 1

	if( currentIndex > 8 ) // play end of game music for scary last stuff :terror: (copilot suggest :terror: wtf)
		PlayMusicToAll( eMusicPieceID.LEVEL_LAST_MINUTE )

    TitanGunGameLoadoutInfo loadoutInfo = loadoutInfos[ currentIndex ]

    if( currentIndex == 7 )
        loadoutInfo.isBrute = true
    else if( currentIndex == 8 )
        loadoutInfo.isSwordCore = true
    else if( currentIndex == 9 )
        loadoutInfo.isPilot = true

    return loadoutInfo
}