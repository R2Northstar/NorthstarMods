untyped
// literally just ttdm paste
global function GamemodeTGG_Init

const float TFFAIntroLength = 15.0

void function GamemodeTGG_Init()
{
    SetSpawnpointGamemodeOverride( FFA )
	//Riff_ForceSetSpawnAsTitan( eSpawnAsTitan.Always )
	Riff_ForceTitanExitEnabled( eTitanExitEnabled.Never )
	TrackTitanDamageInPlayerGameStat( PGS_ASSAULT_SCORE )
	ScoreEvent_SetupEarnMeterValuesForMixedModes()
	SetLoadoutGracePeriodEnabled( false )
	SetRespawnsEnabled( false )
	Riff_ForceTitanAvailability( eTitanAvailability.Never )
	Riff_ForceBoostAvailability( eBoostAvailability.Disabled )

	ClassicMP_SetCustomIntro( TFFAIntroSetup, TFFAIntroLength )
	AddCallback_OnPlayerKilled( AddTeamScoreForPlayerKilled ) // dont have to track autotitan kills since you cant leave your titan in this mode
	AddCallback_OnPilotBecomesTitan( OnPlayerRespawned ) // I have no idea why this wasn't working with normal respawn callback, might be now though
    SetKillcamsEnabled( false )
}

void function OnPlayerRespawned( entity player, entity titan )
{
    //UpdateLivingTitanLoadout( player )
    foreach ( entity weapon in player.GetOffhandWeapons() )
		player.TakeWeaponNow( weapon.GetWeaponClassName() )

    thread OnPlayerRespawned_Threaded( player )
}

void function OnPlayerRespawned_Threaded( entity player )
{
	WaitFrame()
	if ( IsValid( player ) )
		PlayerEarnMeter_SetMode( player, eEarnMeterMode.DISABLED )

    // ultra fucking hacky jesus
    int currentWeaponIndex = GameRules_GetTeamScore( player.GetTeam() )
    if(currentWeaponIndex == 8)
    {
        WaitFrame()
        player.Server_SetDodgePower( 100.0 )
		player.SetPowerRegenRateScale( 6.5 )
        player.GiveOffhandWeapon("melee_titan_sword", OFFHAND_MELEE, ["super_charged"] )
        player.SetActiveWeaponByName("melee_titan_sword")
        GivePassive( player, ePassives.PAS_FUSION_CORE )
		GivePassive( player, ePassives.PAS_SHIFT_CORE )
    }
}

void function TFFAIntroSetup()
{
	// this should show intermission cam for 15 sec in prematch, before spawning players as titans
	AddCallback_GameStateEnter( eGameState.Prematch, TFFAIntroStart )
	AddCallback_OnClientConnected( TFFAIntroShowIntermissionCam )
}

void function TFFAIntroStart()
{
	thread TFFAIntroStartThreaded()
}

void function TFFAIntroStartThreaded()
{
	ClassicMP_OnIntroStarted()

	foreach ( entity player in GetPlayerArray() )
		TFFAIntroShowIntermissionCam( player )
		
	wait TFFAIntroLength
	
	ClassicMP_OnIntroFinished()
}

void function TFFAIntroShowIntermissionCam( entity player )
{
	if ( GetGameState() != eGameState.Prematch )
		return
	
	thread PlayerWatchesTFFAIntroIntermissionCam( player )
}

void function PlayerWatchesTFFAIntroIntermissionCam( entity player )
{
	ScreenFadeFromBlack( player )

	entity intermissionCam = GetEntArrayByClass_Expensive( "info_intermission" )[ 0 ]
	
	// the angle set here seems sorta inconsistent as to whether it actually works or just stays at 0 for some reason
	player.SetObserverModeStaticPosition( intermissionCam.GetOrigin() )
	player.SetObserverModeStaticAngles( intermissionCam.GetAngles() )
	player.StartObserverMode( OBS_MODE_STATIC_LOCKED )

	wait TFFAIntroLength
	
	RespawnAsTitan( player, false , CreateTGGTitanLoadout( player))

    TryGameModeAnnouncement( player )
}

void function UpdateLivingTitanLoadout( entity player )
{
    if( GetGameState() == eGameState.WinnerDetermined)
        return

    int currentWeaponIndex = GameRules_GetTeamScore( player.GetTeam() )
	array<TitanGunGameWeapon> weapons = GetTitanGunGameWeapons()
	
	if ( currentWeaponIndex >= weapons.len() )
		currentWeaponIndex = weapons.len() - 1
		
	if ( currentWeaponIndex > 9) // play end of game music for special weapons
		PlayMusicToAll( eMusicPieceID.LEVEL_LAST_MINUTE ) // this *shouldn't* overlap if done multiple times
	
	TitanGunGameWeapon weapon = weapons[ currentWeaponIndex ]
	
    if( currentWeaponIndex == 9 )
    {
        thread TitanEjectPlayer( player, false )
        EmitSoundOnEntity( player, "autoEjectNotice" )
        return
    }

	foreach ( entity weapon in player.GetMainWeapons() )
		player.TakeWeaponNow( weapon.GetWeaponClassName() )

    if( currentWeaponIndex == 8 )
    {
        player.GiveWeapon( "mp_titanweapon_sniper" )
        player.Server_SetDodgePower( 100.0 )
		player.SetPowerRegenRateScale( 6.5 )
        player.GiveOffhandWeapon("melee_titan_sword", OFFHAND_MELEE, ["super_charged"] )
        player.SetActiveWeaponByName("melee_titan_sword")
        GivePassive( player, ePassives.PAS_FUSION_CORE )
		GivePassive( player, ePassives.PAS_SHIFT_CORE )
    } else {
        player.GiveWeapon( weapon.weapon, weapon.mods )
    }
}

// void function EjectTGGPlayer( entity player )
// {
//     Wa // might be execution race condition thing lol
//     thread TitanEjectPlayer( player )
// }

TitanLoadoutDef function CreateTGGTitanLoadout( entity player )
{
    array<string> possibleChassis = ["titan_atlas_tone_prime", "titan_atlas_tracker", "titan_atlas_ion_prime", "titan_atlas_stickybomb"]
    TitanGunGameWeapon weapon = GetTitanGunGameWeapon( player )
    TitanLoadoutDef loadout = GetTitanLoadoutForPlayer( player )
    loadout.setFile = possibleChassis.getrandom()
    loadout.passive2 = ""
    if(weapon.weapon == "melee_titan_sword")
    {
        loadout.primary = "mp_titanweapon_sniper"
    } else 
    {
        loadout.primary = weapon.weapon
    }
    loadout.coreAbility = weapon.core
    return loadout
}

TitanGunGameWeapon function GetTitanGunGameWeapon( entity player )
{
    int currentWeaponIndex = GameRules_GetTeamScore( player.GetTeam() )
    array<TitanGunGameWeapon> weapons = GetTitanGunGameWeapons()

    if ( currentWeaponIndex >= weapons.len() )
		currentWeaponIndex = weapons.len() - 1 // can someone explain what this does
		
	if ( currentWeaponIndex > 8 ) // play end of game music for special weapons
		PlayMusicToAll( eMusicPieceID.LEVEL_LAST_MINUTE )

    TitanGunGameWeapon weapon = weapons[ currentWeaponIndex ]

    return weapon
}

void function AddTeamScoreForPlayerKilled( entity victim, entity attacker, var damageInfo )
{
	if ( victim != attacker && GetGameState() == eGameState.Playing)
	{
        if ((victim.IsTitan() && attacker.IsPlayer()) || (attacker.IsPlayer() && victim.IsPlayer()))
        {
		    AddTeamScore( attacker.GetTeam(), 1 )
		    // why isn't this PGS_SCORE? odd game
		    attacker.AddToPlayerGameStat( PGS_ASSAULT_SCORE, 1 )
            UpdateLivingTitanLoadout( attacker )
        }
        print("wtf")
	}

    thread ScuffedRespawnVictimWithTitanLoadout( victim)
}

void function ScuffedRespawnVictimWithTitanLoadout( entity player )
{
    wait 4
    int currentWeaponIndex = GameRules_GetTeamScore( player.GetTeam() )
    if(!IsAlive( player ) || (GetGameState() != eGameState.WinnerDetermined))
    {
        if (currentWeaponIndex >= 9)
            player.RespawnPlayer( null )
        else
            RespawnAsTitan( player, false , CreateTGGTitanLoadout( player ) )
    }
}