#if CLIENT
global function ColumnData_Init
#endif //CLIENT

#if SERVER
global function AddServerScoreboardColumn
global function ServerColumsInit
#endif //SERVER

global table<string,int> gamemodeCoumns = {
    [GAMEMODE_ARENA] = 1 ,
    [GAMEMODE_CHAMBER] =  2,
    [GAMEMODE_FASTBALL] = 3,
    [GAMEMODE_GG] = 2,
    [GAMEMODE_HIDDEN] = 2,
    [GAMEMODE_HIDEANDSEEK] = 0,
    [GAMEMODE_INFECTION] = 1,
    [GAMEMODE_KR] = 2,
    [GAMEMODE_SNS] = 3,
    [GAMEMODE_TFFA] = 2,
    [GAMEMODE_CTF_COMP] = 4,
    [GAMEMODE_TT] = 3 ,
    //[GAMEMODE_CP] = 3,
    //[GAMEMODE_LTS] = 2,
    //[GAMEMODE_AITDM] =  3,
    //[GAMEMODE_TDM] = 3, // might not be correct the gamemode is called TEAM_DEATHMATCH
    //[GAMEMODE_COLISEUM] = 1 ,
    //[GAMEMODE_CTF] = 3,
    //[GAMEMODE_FFA] = 3,
    //[GAMEMODE_SPEEDBALL] = 3,
    //[GAMEMODE_MFD] = 3,
    //[GAMEMODE_TTDM] = 3,
    //[GAMEMODE_FD] = 3
}


#if CLIENT

void function ColumnData_Init()
{
    AddServerToClientStringCommandCallback( "AddColumnToClient", ServerCallback_AddColumnToClient )

}

void function ServerCallback_AddColumnToClient( array<string> args )
{
    GameMode_AddScoreboardColumnData( args[0], RetrunSpace(args[1]), args[2].tointeger(), args[3].tointeger() )
}

#endif //CLIENT

#if SERVER
//struct for each custom column
struct ColumnData{
    string gamemode
    string scoreName 
    int scoreType
    int digits
}

array<ColumnData> columns

void function ServerColumsInit()
{
    AddCallback_OnClientConnected( AddColumnOnConnect )
}

void function AddServerScoreboardColumn(string scoreName, int scoreType, int digits)
{
    //Looks terrible, but this is the only way to define a struct in a function with args
    ColumnData col = {...}
    col.gamemode = GAMETYPE // this always returns the neded string for the gamemode, its better than to have the file define it
    col.scoreName = ReplaceSpace(scoreName)
    col.scoreType = scoreType
    col.digits = digits
    //This needs to be reworked but I need a table with a column amout for each mode
    if(columns.len() == 2)
    {
        printt("Cannot add more than 2 custom columns")
        return
    }
    columns.append(col)
}

void function AddColumnOnConnect(entity player)
{
    //adds all the registered columns when a player connects
    foreach(ColumnData cdat in columns)
	    ServerToClientStringCommand(player,"AddColumnToClient " + cdat.gamemode + " " + cdat.scoreName + " " +cdat.scoreType+ " " + cdat.digits)
}

#endif //SERVER

// shared functions
string function ReplaceSpace(string s)
{
    return StringReplace(s," ","x!c",true, true) //used as a replacement for string, as the args are seperated by spaces, this later gets reverted
}
string function RetrunSpace(string s)
{
    return StringReplace(s,"x!c"," ",true, true)
}