untyped

global function ClObituary_Init

global function Obituary_Print
global function Obituary_Print_Generic
global function Obituary
global function Obituary_GetEntityInfo
global function Obituary_Print_Localized
global function Obituary_SetEnabled
global function Obituary_SetIndexOffset

global function ServerCallback_SquadLeaderBonus
global function ServerCallback_SquadLeaderDoubleXP

// S2.ClientKillCallback
global function AddCallback_OnPlayerKilled
global function AddCallback_OnEntityKilled

global struct ObituaryCallbackParams
{
	entity victim
	entity attacker
	int damageSourceId
	int scriptDamageType
	bool victimIsOwnedTitan
}
/////////////////

const NUM_OBITUARY_LINES = 4		// cant change arbitrarily, need to have matching entries in the .res file
const obituaryTextBoxWidth = 500
const obituaryTextBoxHeight = 20
const defaultCharacterWidth = 5

struct ObituaryData
{
	float startTime
	var	rui
}


struct
{
	array<ObituaryData>		obituaryQueue = []
	bool obituariesEnabled = true
	int indexOffest = 0

	// NS - Taken from https://github.com/S2ymi/R2NS-ClientKillCallback
	// The difference between entity and player callbacks is just wether or not it triggers on any entity death or only on actual player deaths
	// Generally speaking, you'll mostly want to use AddCallback_OnPlayerKilled to prevent unnecessary function calls
	array< void functionref( ObituaryCallbackParams ) > onPlayerKilledClientCallbacks
	array< void functionref( ObituaryCallbackParams ) > onEntityKilledClientCallbacks
	/////////////////
} file

struct ObitEntityInfo
{
	string displayName = ""
	vector displayColor = OBITUARY_COLOR_WEAPON
	string petDisplayName = ""
}

global struct ObitStringData
{
	string attackerName = ""
	string attackerPetName = ""
	string victimName = ""
	string victimPetName = ""
	string weaponLocalizedName = ""
	string attackerLocalizedString = "#OBIT_PLAYER_STRING"
	string victimLocalizedString = "#OBIT_PLAYER_STRING"
	string weaponLocalizedString = "#OBIT_BRACKETED_STRING"
}

// NS - Taken from https://github.com/S2ymi/R2NS-ClientKillCallback
void function AddCallback_OnPlayerKilled( void functionref( ObituaryCallbackParams ) callback )
{
	Assert( !file.onPlayerKilledClientCallbacks.contains( callback ), "Already added " + string( callbackFunc ) + " with AddCallback_OnPlayerKilled"  )
	file.onPlayerKilledClientCallbacks.append( callback )
}

void function AddCallback_OnEntityKilled( void functionref( ObituaryCallbackParams ) callback )
{
	Assert( !file.onEntityKilledClientCallbacks.contains( callback ), "Already added " + string( callbackFunc ) + " with AddCallback_OnEntityKilled"  )
	file.onEntityKilledClientCallbacks.append( callback )
}
/////////////////

function ClObituary_Init()
{

}

void function EntitiesDidLoad()
{
}

void function ServerCallback_SquadLeaderBonus( int playerEHandle )
{
	entity pilot = GetEntityFromEncodedEHandle( playerEHandle )

	if ( !IsValid( pilot ) )
		return

	if ( !pilot.IsPlayer() )
		return

	if ( pilot == GetLocalClientPlayer() )
		Obituary_Print_Generic( "#OBIT_SQUAD_LEADER_BONUS_YOU", pilot.GetPlayerName(), TEAM_COLOR_FRIENDLY, <255, 255, 255> )
	else
		Obituary_Print_Generic( "#OBIT_SQUAD_LEADER_BONUS", pilot.GetPlayerName(), TEAM_COLOR_FRIENDLY, <255, 255, 255> )
}

void function ServerCallback_SquadLeaderDoubleXP()
{
	AnnouncementData announcement = Announcement_Create( "#SQUAD_LEADER_BONUS_ANNOUNCE" )
	bool displayNow = InitializeAnnouncement_ShouldDisplayNow( announcement, "#SQUAD_LEADER_BONUS_ANNOUNCE", "#SQUAD_LEADER_BONUS_ANNOUNCE_DESC", TEAM_COLOR_YOU )
	announcement.announcementStyle = ANNOUNCEMENT_STYLE_SWEEP
	announcement.icon = $"rui/menu/common/dbl_xp_icon"
	announcement.iconAspect = <1, 1, 0>
	announcement.soundAlias = SFX_HUD_ANNOUNCE_QUICK
	announcement.duration = 4.0

	if ( displayNow )
		thread AnnouncementMessage_Display( GetLocalClientPlayer(), announcement )
}

ObitEntityInfo function Obituary_GetEntityInfo( entity ent, bool victimIsOwnedTitan = false, damageSourceId = null )
{
	ObitEntityInfo info

	if ( IsValid( ent ) )
	{
		AttackerDisplayNameStruct names = GetAttackerDisplayNamesFromClassname( ent, victimIsOwnedTitan )
		info.displayName = names.attackerName
		info.petDisplayName = names.attackerPetName

		entity localPlayer = GetLocalClientPlayer()

		info.displayColor = localPlayer.GetTeam() == ent.GetTeam() ? OBITUARY_COLOR_FRIENDLY : OBITUARY_COLOR_ENEMY

		if ( !IsWatchingReplay() )
		{
			local entBoss = ent.GetBossPlayer()
			if ( !IsPrivateMatch() && ((ent.IsPlayer() && IsPartyMember( ent )) || ((entBoss != null) && IsPartyMember( entBoss ))) )
				info.displayColor = OBITUARY_COLOR_PARTY

			if ( ent == localPlayer )
				info.displayColor = OBITUARY_COLOR_LOCALPLAYER
			else if ( !ent.IsPlayer() && (entBoss == localPlayer) )
				info.displayColor = OBITUARY_COLOR_LOCALPLAYER
		}
	}
	else if ( damageSourceId != null )
	{
		string name = GetAttackerDisplayNamesDamageSourceId( damageSourceId )
		info.displayColor = OBITUARY_COLOR_ENEMY // Since we can't know if it's an enemy of friendly lets assume enemy.
		info.displayName = name
	}

	return info
}

function Obituary( entity attacker, string attackerClass, entity victim, int scriptDamageType, int damageSourceId, bool isHeadShot, bool victimIsOwnedTitan = false, bool forceDisplay = false )
{
	if ( IsSingleplayer() )
		return

	// NS - Taken from https://github.com/S2ymi/R2NS-ClientKillCallback
	foreach( callback in file.onEntityKilledClientCallbacks ){
		ObituaryCallbackParams params
		params.victim = victim
		params.attacker = attacker
		params.damageSourceId = damageSourceId
		params.scriptDamageType = scriptDamageType
		params.victimIsOwnedTitan = victimIsOwnedTitan

		callback( params )
	}
	/////////////////

	if ( GetConVarInt( "hud_setting_showObituary" ) == 0 )
		return

	if ( !forceDisplay )
	{
		if ( victim.IsPlayer() )
		{
			// Players
			if ( !OBITUARY_ENABLED_PLAYERS )
				return
		}
		else if ( victim.IsTitan() )
		{
			// NPC Titans
			if ( !OBITUARY_ENABLED_NPC_TITANS )
				return
		}
		else
		{
			// NPC
			if ( !OBITUARY_ENABLED_NPC )
				return
		}
	}

	if ( damageSourceId == eDamageSourceId.round_end )
		return

	/*******************************************/
	/* GET INFORMATION ABOUT ENTITIES INVOLVED */
	/*******************************************/

	ObitEntityInfo attackerInfo = Obituary_GetEntityInfo( attacker, false, damageSourceId )
	ObitEntityInfo victimInfo = Obituary_GetEntityInfo( victim, victimIsOwnedTitan, damageSourceId )
	bool isDeathSuicide = IsSuicide( attacker, victim, damageSourceId )

	// Don't show NPC suicides, also makes titan eject deaths not show up which is good
	if ( isDeathSuicide && victim.IsNPC() )
		return

	string sourceDisplayName = ""
	//if ( isDeathSuicide )
	//	damageSourceId = damagedef_suicide

	//sourceDisplayName = DamageDef_GetObituary( damageSourceId ) <- replace with this when all damageSourceIds are converted

	sourceDisplayName = GetObitFromDamageSourceID( damageSourceId )

	/********************************************/
	/* PRINT DEBUG INFO IF SOMETHING GOES WRONG */
	/********************************************/

	bool printDebugInfo = false
	local debugSourceDisplayName = sourceDisplayName

	if ( sourceDisplayName == "" )
	{
		debugSourceDisplayName = GetObitFromDamageSourceID( eDamageSourceId.damagedef_unknownBugIt )
		printDebugInfo = true
	}

	if ( attackerInfo.displayName == "" )
	{
		printDebugInfo = true
	}

	if ( victimInfo.displayName == "" )
	{
		printDebugInfo = true
	}

	if ( printDebugInfo )
	{
		printt( "------------------------------------------" )
		printt( " FULL OBITUARY INFO COULD NOT BE RESOLVED " )
		printt( "    attacker:", attacker )
		if ( IsValid( attacker ) )
		{
			printt( "    attacker classname:", attacker.GetClassName() )
			local attackerOwner = attacker.GetOwner()
			printt( "    attackerOwner:", attackerOwner )
			if ( IsValid( attackerOwner ) )
				printt( "    attackerOwner classname:", attackerOwner.GetClassName() )
		}
		printt( "    victim:", victim )
		if ( IsValid( victim ) )
		{
			printt( "    victim classname:", victim.GetClassName() )
			local victimOwner = victim.GetOwner()
			printt( "    victimOwner:", victimOwner )
			if ( IsValid( victimOwner ) )
				printt( "    victimOwner classname:", victimOwner.GetClassName() )
		}
		printt( "    scriptDamageType:", scriptDamageType )
		printt( "    damageSourceId:", damageSourceId )
		printt( "    sourceDisplayName:", debugSourceDisplayName )
		printt( "------------------------------------------" )
	}

	/**************************/
	/* PRINT THE OBIT MESSAGE */
	/**************************/

	if ( isDeathSuicide )
	{
		attackerInfo.displayName = ""
		attackerInfo.displayColor = victimInfo.displayColor
	}

	local weaponIcon = null
	if ( isHeadShot )
		weaponIcon = $"vgui/HUD/obituary_headshot"

	vector obitColor
	if ( scriptDamageType & DF_BURN_CARD_WEAPON )
		obitColor = OBITUARY_COLOR_BURN_WEAPON
	else
		obitColor = OBITUARY_COLOR_WEAPON

	string attackerString
	string weaponString
	string victimString

	if ( attackerInfo.petDisplayName != "" )
	{
		attackerString = Localize( "#OBIT_PLAYER_CONTROLLED_AI_STRING", attackerInfo.displayName, Localize( attackerInfo.petDisplayName ) )
	}
	else
	{
		attackerString = Localize( "#OBIT_PLAYER_STRING", attackerInfo.displayName )
	}

	if ( victimInfo.petDisplayName != "" )
	{
		victimString = Localize( "#OBIT_PLAYER_CONTROLLED_AI_STRING", victimInfo.displayName, Localize( victimInfo.petDisplayName ) )
	}
	else
	{
		victimString = Localize( "#OBIT_PLAYER_STRING", victimInfo.displayName )
	}

	string localizedObit = Localize( "#OBIT_ENT_WEAPON_ENT", attackerString, Localize( sourceDisplayName ), victimString )

	bool displayBackground = attacker == GetLocalClientPlayer() || victim == GetLocalClientPlayer()

	float backgroundAlpha = (attacker == GetLocalClientPlayer() || victim == GetLocalClientPlayer()) ? 0.5 : 0.0
	vector backgroundColor = <0, 0, 0>
	//bool displayBackground = false

	//if ( attacker.IsPlayer() )
	//	attackerInfo.displayColor = <255, 255, 255>
	//else if ( victim.IsPlayer() )
	//	attackerInfo.displayColor = <255, 255, 255>
	//
	Obituary_Print_Localized( localizedObit, attackerInfo.displayColor, victimInfo.displayColor, <255, 255, 255>, backgroundColor, backgroundAlpha )

	// NS - Taken from https://github.com/S2ymi/R2NS-ClientKillCallback
	foreach( callback in file.onPlayerKilledClientCallbacks ){
		ObituaryCallbackParams params
		params.victim = victim
		params.attacker = attacker
		params.damageSourceId = damageSourceId
		params.scriptDamageType = scriptDamageType
		params.victimIsOwnedTitan = victimIsOwnedTitan

		callback( params )
	}
	/////////////////
}


void function Obituary_Print( string attackerDisplayName, string weaponDisplayName, string victimDisplayName, vector attackerColor, vector weaponColor, vector victimColor, weaponIcon = null, string attackerPetDisplayName = "", string victimPetDisplayName = "" )
{
	#if DEV
		if ( split( attackerDisplayName, "(" ).len() )
			attackerDisplayName = split( attackerDisplayName, "(" )[0]

		if ( split( victimDisplayName, "(" ).len() )
			victimDisplayName = split( victimDisplayName, "(" )[0]
	#endif

	ObitStringData obitStringData

	Assert( typeof( weaponDisplayName ) == "string" )

	obitStringData.attackerName = attackerDisplayName
	obitStringData.attackerPetName = attackerPetDisplayName
	obitStringData.victimName = victimDisplayName
	obitStringData.victimPetName = victimPetDisplayName
	obitStringData.weaponLocalizedName = weaponDisplayName
	obitStringData.weaponLocalizedString = "#OBIT_BRACKETED_STRING"

	string attackerString
	string weaponString
	string victimString

	if ( attackerPetDisplayName != "" )
	{
		obitStringData.attackerLocalizedString = "#OBIT_PLAYER_CONTROLLED_AI_STRING"
		attackerString = Localize( "#OBIT_PLAYER_CONTROLLED_AI_STRING", attackerDisplayName, Localize( attackerPetDisplayName ) )
	}
	else
	{
		obitStringData.attackerLocalizedString = "#OBIT_PLAYER_STRING"
		attackerString = Localize( "#OBIT_PLAYER_STRING", attackerDisplayName )
	}

	if ( victimPetDisplayName != "" )
	{
		obitStringData.victimLocalizedString = "#OBIT_PLAYER_CONTROLLED_AI_STRING"
		victimString = Localize( "#OBIT_PLAYER_CONTROLLED_AI_STRING", victimDisplayName, Localize( victimPetDisplayName ) )
	}
	else
	{
		obitStringData.victimLocalizedString = "#OBIT_PLAYER_STRING"
		victimString = Localize( "#OBIT_PLAYER_STRING", attackerDisplayName )
	}

	string localizedObit = Localize( "#OBIT_ENT_WEAPON_ENT", attackerString, Localize( weaponDisplayName ), victimString )

	AddObituary( obitStringData, attackerColor, victimColor )

//	#OBIT_PLAYER_CONTROLLED_AI_STRING
//	#OBIT_BRACKETED_STRING

////		"A's B"
//		file.obituaryLines[ next ].attacker.SetText( "#OBIT_PLAYER_CONTROLLED_AI_STRING", attackerDisplayName, obituaryData.attackerPetDisplayName  )
//	else
//		file.obituaryLines[ next ].attacker.SetText( obituaryData.attackerDisplayName )
//
//	if ( obituaryData.victimPetDisplayName != "" )
//		//		"A's B"
//		file.obituaryLines[ next ].victim.SetText( "#OBIT_PLAYER_CONTROLLED_AI_STRING", obituaryData.victimDisplayName, obituaryData.victimPetDisplayName )
//	else
//		file.obituaryLines[ next ].victim.SetText( obituaryData.victimDisplayName )
//	file.obituaryLines[ next ].victim.SetColor( ColorStringToArray( expect string( obituaryData.victimColor ) ) )
//
////	eventText = format( "Killed by `1%s`0", attackerTypeText )
////	string obitString = "`1" + attackerDisplayName + "`0 " + obituaryData.weaponDisplayName
//
//	PrintTable( obituaryData )

//	thread HandleObituaryOverflow( obituaryData )
}


void function Obituary_Print_Localized( string localizedPrint, vector altColor1 = <255, 255, 255>, vector altColor2 = <255, 255, 255>, vector altColor3 = <255, 255, 255>, vector backgroundColor = <255, 255, 255>, float backgroundAlpha = 0.0 )
{
	if ( !file.obituariesEnabled )
		return

	var rui = CreateCockpitRui( $"ui/obituary_crawl_localized.rpak" )
	RuiSetGameTime( rui, "startTime", Time() )
	RuiSetGameTime( rui, "updateTime", Time() )
	RuiSetFloat( rui, "duration", OBITUARY_DURATION )

	RuiSetString( rui, "obitString", localizedPrint )

	RuiSetFloat3( rui, "string1Color", altColor1 / 255.0 )
	RuiSetFloat3( rui, "string2Color", altColor2 / 255.0 )
	RuiSetFloat3( rui, "string3Color", altColor3 / 255.0 )

	RuiSetFloat3( rui, "backgroundColor", backgroundColor / 255.0 )
	RuiSetFloat( rui, "backgroundAlpha", backgroundAlpha )

	ObituaryData newObituary
	newObituary.rui = rui
	newObituary.startTime = Time()
	file.obituaryQueue.insert( 0, newObituary )

	UpdateObituaryQueue()
}


void function Obituary_Print_Generic( string localizedEvent, string entityName, vector eventColor, vector nameColor )
{
	if ( !file.obituariesEnabled )
		return

	var rui = CreateCockpitRui( $"ui/obituary_crawl_generic.rpak" )
	RuiSetGameTime( rui, "startTime", Time() )
	RuiSetGameTime( rui, "updateTime", Time() )
	RuiSetFloat( rui, "duration", OBITUARY_DURATION )

	RuiSetString( rui, "localizedString", localizedEvent )
	RuiSetString( rui, "entityName", entityName )

	RuiSetFloat3( rui, "string1Color", eventColor / 255.0 )
	RuiSetFloat3( rui, "string2Color", nameColor / 255.0 )

	ObituaryData newObituary
	newObituary.rui = rui
	newObituary.startTime = Time()
	file.obituaryQueue.insert( 0, newObituary )

	UpdateObituaryQueue()
}


void function UpdateObituaryQueue()
{
	for ( int index = file.obituaryQueue.len() - 1; index >= 0; index-- )
	{
		ObituaryData obitData = file.obituaryQueue[index]

		if ( Time() - obitData.startTime >= OBITUARY_DURATION || index > 6 )
		{
			RuiDestroy( obitData.rui )
			file.obituaryQueue.remove( index )
			continue
		}

		RuiSetInt( obitData.rui, "offset", index + file.indexOffest )
		RuiSetGameTime( obitData.rui, "updateTime", Time() )
	}
}

void function AddObituary( ObitStringData obitStringData, vector string1Color, vector string2Color )
{
	if ( !file.obituariesEnabled )
		return

	//	var rui = RuiCreate( $"ui/obituary_crawl.rpak", clGlobal.topoFullScreen, RUI_DRAW_HUD, 0 )
	var rui = CreateCockpitRui( $"ui/obituary_crawl.rpak" )
	RuiSetGameTime( rui, "startTime", Time() )
	RuiSetGameTime( rui, "updateTime", Time() )
	RuiSetFloat( rui, "duration", OBITUARY_DURATION )

	string attackerName = ""
	string attackerPetName = ""
	string victimName = ""
	string victimPetName = ""
	string attackerLocalizedString = "#OBIT_PLAYER_STRING"
	string victimLocalizedString = "#OBIT_PLAYER_STRING"
	string weaponLocalizedString = "#OBIT_BRACKETED_STRING"

	// Trying to track down a code assert where the third argument to RuiSetString is somehow null.
	Assert( typeof( obitStringData.attackerName ) == "string" )
	Assert( typeof( obitStringData.attackerPetName ) == "string" )
	Assert( typeof( obitStringData.attackerLocalizedString ) == "string" )
	Assert( typeof( obitStringData.victimName ) == "string" )
	Assert( typeof( obitStringData.victimPetName ) == "string" )
	Assert( typeof( obitStringData.victimLocalizedString ) == "string" )
	Assert( typeof( obitStringData.weaponLocalizedName ) == "string" )
	Assert( typeof( obitStringData.weaponLocalizedString ) == "string" )

	RuiSetString( rui, "attackerName", obitStringData.attackerName )
	if ( obitStringData.attackerPetName.len() )
	{
		RuiSetString( rui, "attackerPetName", obitStringData.attackerPetName )
		RuiSetBool( rui, "hasAttackerPetName", true )
	}
	RuiSetString( rui, "attackerLocalizedString", obitStringData.attackerLocalizedString )
	RuiSetString( rui, "victimName", obitStringData.victimName )
	if ( obitStringData.victimPetName.len() )
	{
		RuiSetString( rui, "victimPetName", obitStringData.victimPetName )
		RuiSetBool( rui, "hasVictimPetName", true )
	}
	RuiSetString( rui, "victimLocalizedString", obitStringData.victimLocalizedString )
	Assert( typeof( obitStringData.weaponLocalizedName ) == "string" )
	RuiSetString( rui, "weaponLocalizedName", obitStringData.weaponLocalizedName )
	RuiSetString( rui, "weaponLocalizedString", obitStringData.weaponLocalizedString )
	RuiSetFloat3( rui, "string1Color", string1Color / 255.0 )
	RuiSetFloat3( rui, "string2Color", string2Color / 255.0 )

	ObituaryData newObituary
	newObituary.rui = rui
	newObituary.startTime = Time()
	file.obituaryQueue.insert( 0, newObituary )

	UpdateObituaryQueue()
}

/*
function Obituary_Display( obituaryData )
{
	local next = obituaryData.indexToUse
	BumpDownExistingObituaries()

	if ( split( obituaryData.attackerDisplayName, "(" ).len() )
		obituaryData.attackerDisplayName = split( obituaryData.attackerDisplayName, "(" )[0]

	if ( split( obituaryData.victimDisplayName, "(" ).len() )
		obituaryData.victimDisplayName = split( obituaryData.victimDisplayName, "(" )[0]


	if ( obituaryData.attackerPetDisplayName != "" )
		file.obituaryLines[ next ].attacker.SetText( "#OBIT_PLAYER_CONTROLLED_AI_STRING", obituaryData.attackerDisplayName, obituaryData.attackerPetDisplayName  )
	else
		file.obituaryLines[ next ].attacker.SetText( obituaryData.attackerDisplayName )
	file.obituaryLines[ next ].attacker.SetColor( ColorStringToArray( expect string( obituaryData.attackerColor ) ) )

	file.obituaryLines[ next ].weapon.SetText( "#OBIT_BRACKETED_STRING", obituaryData.weaponDisplayName, null, null, null, null )
	file.obituaryLines[ next ].weapon.SetColor( ColorStringToArray( expect string( obituaryData.weaponColor ) ) )

	if ( obituaryData.victimPetDisplayName != "" )
		file.obituaryLines[ next ].victim.SetText( "#OBIT_PLAYER_CONTROLLED_AI_STRING", obituaryData.victimDisplayName, obituaryData.victimPetDisplayName )
	else
		file.obituaryLines[ next ].victim.SetText( obituaryData.victimDisplayName )
	file.obituaryLines[ next ].victim.SetColor( ColorStringToArray( expect string( obituaryData.victimColor ) ) )

	if ( obituaryData.weaponIcon )
	{
		file.obituaryLines[ next ].icon.SetImage( obituaryData.weaponIcon )
		file.obituaryLines[ next ].icon.SetSize( file.obituaryLines[ next ].victim.GetHeight(), file.obituaryLines[ next ].victim.GetHeight() )
	}
	else
	{
		file.obituaryLines[ next ].icon.SetWidth( 0 )
	}

	file.obituaryLines[ next ].victim.ReturnToBasePos()

	foreach ( elem in file.obituaryLines[ next ]	)
	{
		elem.SetAlpha( 128 )
		elem.FadeOverTimeDelayed( 0, OBITUARY_FADE_OUT_DURATION, OBITUARY_DURATION )
		elem.Show()
	}

	// increment which hud elems to use next time
	file.nextObituaryIndexToUse++
	if ( file.nextObituaryIndexToUse >= NUM_OBITUARY_LINES )
		file.nextObituaryIndexToUse = 0
}
*/

void function Obituary_SetEnabled( bool state )
{
	file.obituariesEnabled = state
}

void function Obituary_SetIndexOffset( int offset )
{
	file.indexOffest = offset
}
